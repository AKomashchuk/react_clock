{"version":3,"sources":["component/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","window","setInterval","setState","console","log","toLocaleTimeString","prevProps","name","props","clearInterval","className","Component","getRandomName","value","Math","random","toString","slice","App","hasClock","clockName","clockNameId","document","addEventListener","ReactDOM","render","getElementById"],"mappings":"oNAUaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,KAAM,IAAIC,OAE1B,IAAQD,EAAS,EAAKD,MAAdC,KAERI,OAAOG,QAAQC,IAAIR,EAAKS,wBACvB,OAdP,gCAiBE,SAAmBC,GACjB,IAAQC,EAASR,KAAKS,MAAdD,KAEJA,IAASD,EAAUC,MACrBP,OAAOG,QAAQC,IAAf,uBACkBE,EAAUC,KAD5B,yBACiDA,MAtBvD,kCA2BE,WACEE,cAAcV,KAAKD,WA5BvB,oBA+BE,WACE,IAAQF,EAASG,KAAKJ,MAAdC,KACAW,EAASR,KAAKS,MAAdD,KAER,OACE,sBAAKG,UAAU,QAAf,UACE,iCAASH,IACR,YACAX,EAAKS,4BAvCd,GAA2BM,aCL3B,SAASC,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,GAOX,IAAMK,EAAb,4MACEvB,MAAQ,CACNwB,UAAU,EACVC,UAAWR,KAHf,EAMES,YAAc,EANhB,uDAQE,WAAqB,IAAD,OAClBC,SAASC,iBAAiB,eAAe,WACvC,EAAKrB,SAAS,CAAEiB,UAAU,OAG5BG,SAASC,iBAAiB,SAAS,WACjC,EAAKrB,SAAS,CAAEiB,UAAU,OAG5BpB,KAAKsB,YAAcrB,OAAOC,aAAY,WACpC,EAAKC,SAAS,CAAEkB,UAAWR,QAC1B,QAnBP,kCAsBE,WACEH,wBAAcV,KAAKsB,eAvBvB,oBA0BE,WACE,MAAgCtB,KAAKJ,MAA7BwB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,sBAAKV,UAAU,MAAf,UACE,6CACCS,GAAY,cAAC,EAAD,CAAOZ,KAAMa,WAhClC,GAAyBT,aCZzBa,IAASC,OACP,cAAC,EAAD,IACAH,SAASI,eAAe,W","file":"static/js/main.691044bd.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  date: Date,\n};\n\ntype Props = {\n  name: string,\n};\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ date: new Date() });\n\n      const { date } = this.state;\n\n      window.console.log(date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { name } = this.props;\n\n    if (name !== prevProps.name) {\n      window.console.log(\n        `previousName-${prevProps.name}, currentName-${name}`,\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { date } = this.state;\n    const { name } = this.props;\n\n    return (\n      <div className=\"clock\">\n        <strong>{name}</strong>\n        {' time is '}\n        {date.toLocaleTimeString()}\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { clearInterval } from 'timers';\nimport './App.scss';\nimport { Clock } from './component/Clock';\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 6);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\nexport class App extends Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: getRandomName(),\n  };\n\n  clockNameId = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', () => {\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n\n    this.clockNameId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.clockNameId);\n  }\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}