{"version":3,"sources":["component/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","window","setInterval","setState","prevProps","prevState","props","name","console","log","clearInterval","className","toLocaleTimeString","Component","getRandomName","value","Math","random","toString","slice","App","hasClock","clockName","clockNameId","document","addEventListener","ReactDOM","render","getElementById"],"mappings":"oNAUaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,KAAM,IAAIC,SACzB,OAVP,gCAaE,SAAmBM,EAAkBC,GAC/BL,KAAKM,MAAMC,OAASH,EAAUG,MAEhCC,QAAQC,IAAR,uBACkBL,EAAUG,KAD5B,yBACiDP,KAAKM,MAAMC,OAI1DP,KAAKJ,MAAMC,OAASQ,EAAUR,MAEhCW,QAAQC,IAAIT,KAAKJ,MAAMC,KAAMQ,EAAUR,QAvB7C,kCA2BE,WACEa,cAAcV,KAAKD,WA5BvB,oBA+BE,WACE,IAAQF,EAASG,KAAKJ,MAAdC,KAER,OACE,sBAAKc,UAAU,QAAf,UACE,iCAASX,KAAKM,MAAMC,OACnB,YACAV,EAAKe,4BAtCd,GAA2BC,aCL3B,SAASC,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,GAOX,IAAMK,EAAb,4MACExB,MAAQ,CACNyB,UAAU,EACVC,UAAWR,KAHf,EAMES,YAAc,EANhB,uDAQE,WAAqB,IAAD,OAClBC,SAASC,iBAAiB,eAAe,WACvC,EAAKtB,SAAS,CAAEkB,UAAU,OAG5BG,SAASC,iBAAiB,SAAS,WACjC,EAAKtB,SAAS,CAAEkB,UAAU,OAG5BrB,KAAKuB,YAActB,OAAOC,aAAY,WACpC,EAAKC,SAAS,CAAEmB,UAAWR,QAC1B,QAnBP,kCAsBE,WACEJ,wBAAcV,KAAKuB,eAvBvB,oBA0BE,WACE,IAAQF,EAAarB,KAAKJ,MAAlByB,SAER,OACE,sBAAKV,UAAU,MAAf,UACE,6CACCU,GAAY,cAAC,EAAD,CAAOd,KAAMP,KAAKJ,MAAM0B,mBAhC7C,GAAyBT,aCZzBa,IAASC,OACP,cAAC,EAAD,IACAH,SAASI,eAAe,W","file":"static/js/main.f9d2d33b.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  date: Date,\n};\n\ntype Props = {\n  name: string,\n};\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ date: new Date() });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    if (this.props.name !== prevProps.name) {\n      // eslint-disable-next-line no-console\n      console.log(\n        `previousName-${prevProps.name}, currentName-${this.props.name}`,\n      );\n    }\n\n    if (this.state.date !== prevState.date) {\n      // eslint-disable-next-line no-console\n      console.log(this.state.date, prevState.date);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { date } = this.state;\n\n    return (\n      <div className=\"clock\">\n        <strong>{this.props.name}</strong>\n        {' time is '}\n        {date.toLocaleTimeString()}\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { clearInterval } from 'timers';\nimport './App.scss';\nimport { Clock } from './component/Clock';\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 6);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\nexport class App extends Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: getRandomName(),\n  };\n\n  clockNameId = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', () => {\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n\n    this.clockNameId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.clockNameId);\n  }\n\n  render() {\n    const { hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock name={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}